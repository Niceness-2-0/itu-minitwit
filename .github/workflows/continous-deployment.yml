---
    name: Continuous Deployment
    
    on:
      push:
        # Run workflow every time something is pushed to the main branch
        branches:
          - main
          - talha
      # allow manual triggers for now too
      workflow_dispatch:
        manual: true
    
    # Remember to set the following secrets in your repository's settings:
    # https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
    # DOCKER_USERNAME
    # DOCKER_PASSWORD
    # SSH_USER
    # SSH_KEY
    # SSH_HOST
    
    jobs:
      build:
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout
            uses: actions/checkout@v2
    
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Build and push web
            uses: docker/build-push-action@v6
            with:
              context: .
              file: ./Dockerfile-web
              push: true
              tags: ${{ secrets.DOCKER_USERNAME }}/web:latest
              cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/web:webbuildcache
              cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/web:webbuildcache,mode=max

          - name: Build and push api
            uses: docker/build-push-action@v6
            with:
              context: .
              file: ./Dockerfile-api
              push: true
              tags: ${{ secrets.DOCKER_USERNAME }}/api:latest
              cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/api:webbuildcache
              cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/api:webbuildcache,mode=max
    





          - name: Run PostgreSQL for tests
            run: |
              docker run -d \
                --name test-postgres \
                -e POSTGRES_USER=postgres \
                -e POSTGRES_PASSWORD=postgres \
                -e POSTGRES_DB=my_test_db \
                -p 5432:5432 \
                postgres:14

          - name: Run API container for tests
            run: |
              docker build -f Dockerfile-api -t my-api-test .
              docker run -d \
                --name test-api \
                --network host \
                -e DB_HOST=localhost \
                -e DB_PORT=5432 \
                -e DB_USER=postgres \
                -e DB_PASSWORD=postgres \
                -e DB_NAME=my_test_db \
                my-api-test

          - name: Wait for API to become ready
            run: |
              for i in {1..10}; do
                curl -s http://localhost:5001/health && break
                echo "Waiting for API..."
                sleep 3
              done

          - name: Set up Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.10'

          - name: Install test dependencies
            run: |
              pip install -r requirements.txt || true
              pip install psycopg2-binary requests python-dotenv

          - name: Run tests
            run: |
              python API/tests/minitwit_sim_api_test.py
  
























    
          #- name: Configure SSH
          #  run: |
          #    mkdir -p ~/.ssh/
          #    echo "$SSH_KEY" > ~/.ssh/id_ed25519
          #    chmod 600 ~/.ssh/id_ed25519
          #  env:
          #    SSH_KEY: ${{ secrets.SSH_KEY }}
          
          #- name: Deploy to server
          #  # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
          #  run: >
          #    ssh $SSH_USER@$SSH_HOST
          #    -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no
          #    '/minitwit/deploy.sh'
          #  env:
          #    SSH_USER: ${{ secrets.SSH_USER }}
          #    SSH_HOST: ${{ secrets.SSH_HOST }}