---
    name: Continuous Deployment
    
    on:
      push:
        # Run workflow every time something is pushed to the main branch
        branches:
          - main
      # allow manual triggers for now too
      workflow_dispatch:
        manual: true
    
    # Remember to set the following secrets in your repository's settings:
    # https://github.com/your_username/itu-minitwit-ci/settings/secrets/actions
    # DOCKER_USERNAME
    # DOCKER_PASSWORD
    # SSH_USER
    # SSH_KEY
    # SSH_HOST
    
    jobs:
      build:
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout
            uses: actions/checkout@v2
    
          - name: Login to Docker Hub
            uses: docker/login-action@v3
            with:
              username: ${{ secrets.DOCKER_USERNAME }}
              password: ${{ secrets.DOCKER_PASSWORD }}
    
          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3
    
          - name: Build and push go-api
            uses: docker/build-push-action@v6
            with:
              context: ./go-project
              file: ./go-project/Dockerfile-go-api
              push: true
              tags: ${{ secrets.DOCKER_USERNAME }}/go-api:latest
              cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-api:webbuildcache
              cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/go-api:webbuildcache,mode=max
    #todo: we will use this if we decide on a different image for the DB 
        #   - name: Build and push mysqlimage
        #     uses: docker/build-push-action@v6
        #     with:
        #       context: .
        #       file: ./Dockerfile-mysql
        #       push: true
        #       tags: ${{ secrets.DOCKER_USERNAME }}/mysqlimage:latest
        #       cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mysqlimage:mysqlbuildcache
        #       cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/mysqlimage:mysqlbuildcache,mode=max
    
        #   - name: Build and push flagtoolimage
        #     uses: docker/build-push-action@v6
        #     with:
        #       context: .
        #       file: ./Dockerfile-flagtool
        #       push: true
        #       tags: ${{ secrets.DOCKER_USERNAME }}/flagtoolimage:latest
        #       cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flagtoolimage:flagtoolbuildcache
        #       cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flagtoolimage:flagtoolbuildcache,mode=max
    
          - name: Test minitwit
            run: |
              docker build -t $DOCKER_USERNAME/minitwittestimage -f Dockerfile-go-api-test .
              yes 2>/dev/null | docker compose up -d
              docker run --rm $DOCKER_USERNAME/minitwittestimage
            env:
              DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    
          - name: Configure SSH
            run: |
              mkdir -p ~/.ssh/
              echo "$SSH_KEY" > ~/.ssh/id_ed25519
              chmod 600 ~/.ssh/id_ed25519
            env:
              SSH_KEY: ${{ secrets.SSH_KEY }}
    
          - name: Deploy to server
            # Configure the ~./bash_profile and deploy.sh file on the Vagrantfile
            run: >
              ssh $SSH_USER@$SSH_HOST
              -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no
              '/minitwit/deploy.sh'
            env:
              SSH_USER: ${{ secrets.SSH_USER }}
              SSH_HOST: ${{ secrets.SSH_HOST }}